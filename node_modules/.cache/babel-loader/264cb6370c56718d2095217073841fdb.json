{"ast":null,"code":"import _slicedToArray from\"/Users/godspeed/Desktop/caglarturali.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';import{buildRecordObject}from'../utils';/**\n * Custom hook that uses local storage\n * @param key Key\n * @param defaultValue Default value\n */export var useLocalStorageState=function useLocalStorageState(key,defaultValue){var _useState=useState(function(){var defaultObj=buildRecordObject(defaultValue);var value;try{value=JSON.parse(window.localStorage.getItem(key)||JSON.stringify(defaultObj));}catch(e){value=defaultObj;}return value;}),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setState=_useState2[1];useEffect(function(){window.localStorage.setItem(key,JSON.stringify(state));},[state,key]);return[state,setState];};","map":{"version":3,"sources":["/Users/godspeed/Desktop/caglarturali.github.io/src/hooks/useLocalStorageState.ts"],"names":["useState","useEffect","buildRecordObject","useLocalStorageState","key","defaultValue","defaultObj","value","JSON","parse","window","localStorage","getItem","stringify","e","state","setState","setItem"],"mappings":"qKAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CAEA,OAASC,iBAAT,KAAkC,UAAlC,CAEA;AACA;AACA;AACA;AACA,GACA,MAAO,IAAMC,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAClCC,GADkC,CAElCC,YAFkC,CAM/B,eACuBL,QAAQ,CAAuB,UAAM,CAC7D,GAAMM,CAAAA,UAAU,CAAGJ,iBAAiB,CAACG,YAAD,CAApC,CACA,GAAIE,CAAAA,KAAJ,CAEA,GAAI,CACFA,KAAK,CAAGC,IAAI,CAACC,KAAL,CACNC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BR,GAA5B,GAAoCI,IAAI,CAACK,SAAL,CAAeP,UAAf,CAD9B,CAAR,CAGD,CAAC,MAAOQ,CAAP,CAAU,CACVP,KAAK,CAAGD,UAAR,CACD,CACD,MAAOC,CAAAA,KAAP,CACD,CAZiC,CAD/B,wCACIQ,KADJ,eACWC,QADX,eAeHf,SAAS,CAAC,UAAM,CACdS,MAAM,CAACC,YAAP,CAAoBM,OAApB,CAA4Bb,GAA5B,CAAiCI,IAAI,CAACK,SAAL,CAAeE,KAAf,CAAjC,EACD,CAFQ,CAEN,CAACA,KAAD,CAAQX,GAAR,CAFM,CAAT,CAIA,MAAO,CAACW,KAAD,CAAQC,QAAR,CAAP,CACD,CA1BM","sourcesContent":["import { useState, useEffect } from 'react';\nimport { LocalCache } from '../models';\nimport { buildRecordObject } from '../utils';\n\n/**\n * Custom hook that uses local storage\n * @param key Key\n * @param defaultValue Default value\n */\nexport const useLocalStorageState = <T>(\n  key: string,\n  defaultValue: T,\n): [\n  LocalCache.Record<T>,\n  React.Dispatch<React.SetStateAction<LocalCache.Record<T>>>,\n] => {\n  const [state, setState] = useState<LocalCache.Record<T>>(() => {\n    const defaultObj = buildRecordObject(defaultValue);\n    let value;\n\n    try {\n      value = JSON.parse(\n        window.localStorage.getItem(key) || JSON.stringify(defaultObj),\n      ) as LocalCache.Record<T>;\n    } catch (e) {\n      value = defaultObj;\n    }\n    return value;\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [state, key]);\n\n  return [state, setState];\n};\n"]},"metadata":{},"sourceType":"module"}